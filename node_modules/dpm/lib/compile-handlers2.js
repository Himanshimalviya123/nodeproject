#!/usr/bin/env node

var watch = require('./watch');
var path = require('path');
var next = require('next.js');
var fs = require('fs');
var colorized = require('console-colorjs');
var T = require('./t');
var less = require('less');
var wrench = require('wrench');
var path = require('path');

var t = T();

var stringifyHTML = function(str) {
    return JSON.stringify(str.replace(/\r/g, '').replace(/\n/g, '').replace(/>\s*</g, '><').replace(/\s+/g, ' '))
};

var parser = new(less.Parser)({});

var handlers = {
    html: function(htmlFile) {
        fs.readFile(htmlFile, 'utf8', t(function(str) {
            var basename = path.basename(htmlFile, '.html');
            var jsFile = path.join(path.dirname(htmlFile), basename + '.js');

            var hasStyleFile = fs.existsSync(htmlFile.replace(/html$/, 'css')) || fs.existsSync(htmlFile.replace(/html$/, 'less'));
            
            if (hasStyleFile) {
                console.log('same name', colorized.fail(jsFile))
            }
            
            fs.writeFile(
                jsFile, 
                'define(function(require){' + (hasStyleFile ? 'require("./' + basename + '.css");' : '') + 'return ' + stringifyHTML(str) + '});',
                'utf8',
                t(function() {
                    console.log(colorized.bright(jsFile) + ' compiled');
                })
            );
        }));
    },

    less: function(lessFile) {
        fs.readFile(lessFile, 'utf8', t(function(str) {

            parser.parse(str, t(function(root) {
                var basename = path.basename(lessFile, '.less');
                var cssFile = path.join(path.dirname(lessFile), basename + '.css');
                fs.writeFile(
                    cssFile,
                    root.toCSS(),
                    'utf8', 
                    t(function() {
                        console.log(colorized.bright(cssFile) + ' compiled');
                    })
                );
            }));
        }));
    }
};

module.exports = function(filename) {
    var extname = path.extname(filename);
    if (extname) {
        // remove leading dot
        extname = extname.substring(1);
        if (handlers[extname]) {
            handlers[extname](filename);
        }
    }    
}
